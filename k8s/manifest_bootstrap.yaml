apiVersion: v1
kind: Service
metadata:
  name: dht
spec:
  ports:
    - name: bootstrap-node-port
      port: 9000
  selector:
    app: libp2p-node-bootstrap
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
spec:
  selector:
    database: postgresql
  ports:
    - protocol: TCP
      port: 5432
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-config
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS eth_prices (
      id SERIAL PRIMARY KEY,
      price NUMERIC(10,2),
      createdAt TIMESTAMP DEFAULT current_timestamp
    );
    CREATE TABLE IF NOT EXISTS signatures (
      id SERIAL PRIMARY KEY,
      price_id INT REFERENCES eth_prices(id),
      nodeId VARCHAR(255)
    );
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1  
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        database: postgresql
    spec:
      containers:
      - name: postgresql
        image: postgres
        imagePullPolicy: Never
        env:
        - name: POSTGRES_DB
          value: postgres
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-init
          mountPath: /docker-entrypoint-initdb.d

      volumes:
      - name: postgres-init
        configMap:
          name: postgres-init-config
      - name: postgresql-data
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: libp2p-node-bootstrap
spec:
  replicas: 1  
  selector:
    matchLabels:
      app: libp2p-node-bootstrap
  template:
    metadata:
      labels:
        app: libp2p-node-bootstrap
        database: postgresql
    spec:
      containers:
      - name: libp2p-node
        image: libp2p-node
        imagePullPolicy: Never
        command: ["/libp2p-node"]
        args:
        - "--databaseHost"
        - "postgresql"
        ports:
        - containerPort: 9000
